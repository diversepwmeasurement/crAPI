jobs:
  build:
    env:
      PLATFORMS: linux/amd64,linux/arm64
    needs: build-context
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Env seen prerun
      run: env
    - continue-on-error: true
      id: branch-name
      name: Get branch name
      uses: tj-actions/branch-names@v8
    - continue-on-error: true
      name: Current branch name
      run: 'echo "Current Branch: ${{ steps.branch-name.outputs.current_branch }}"

        echo "Target Branch: ${{ steps.branch-name.outputs.base_ref_branch }}"

        echo "Tag if exist: ${{ steps.branch-name.outputs.tag }}"

        '
    - continue-on-error: true
      if: steps.branch-name.outputs.is_tag == 'true'
      name: Running on a tag.
      run: 'echo "TAG_NAME=${{ steps.branch-name.outputs.tag }}" >> ${GITHUB_ENV}

        echo "TAG_LATEST=latest" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      if: steps.branch-name.outputs.is_tag != 'true' && github.event_name == 'push'
        && steps.branch-name.outputs.current_branch != 'main'
      name: Running on a branch and merge.
      run: 'echo "TAG_NAME=${{ steps.branch-name.outputs.current_branch }}" >> ${GITHUB_ENV}

        echo "TAG_LATEST=${{ steps.branch-name.outputs.current_branch }}" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      if: steps.branch-name.outputs.is_tag != 'true' && github.event_name == 'push'
        && steps.branch-name.outputs.current_branch == 'main'
      name: Running on main branch.
      run: 'echo "TAG_NAME=${{ steps.branch-name.outputs.current_branch }}" >> ${GITHUB_ENV}

        echo "TAG_LATEST=latest" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      if: steps.branch-name.outputs.is_tag != 'true' && github.event_name != 'push'
      name: Running on a branch and pull req.
      run: 'echo "TAG_NAME=${{ steps.branch-name.outputs.base_ref_branch }}" >> ${GITHUB_ENV}

        echo "TAG_LATEST=${{ steps.branch-name.outputs.base_ref_branch }}" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      id: qemu
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
    - continue-on-error: true
      name: Build crapi-identity all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=identity-service
        cache-to: type=gha,mode=max,scope=identity-service
        context: ./services/identity
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/crapi-identity:${{ env.TAG_LATEST }},crapi/crapi-identity:${{
          env.TAG_NAME }}
    - continue-on-error: true
      name: Build crapi-workshop all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=workshop-service
        cache-to: type=gha,mode=max,scope=workshop-service
        context: ./services/workshop
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/crapi-workshop:${{ env.TAG_LATEST }},crapi/crapi-workshop:${{
          env.TAG_NAME }}
    - continue-on-error: true
      name: Build crapi-community all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=community-service
        cache-to: type=gha,mode=max,scope=community-service
        context: ./services/community
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/crapi-community:${{ env.TAG_LATEST }},crapi/crapi-community:${{
          env.TAG_NAME }}
    - continue-on-error: true
      name: Build crapi-web all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=web-service
        cache-to: type=gha,mode=max,scope=web-service
        context: ./services/web
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/crapi-web:${{ env.TAG_LATEST }},crapi/crapi-web:${{ env.TAG_NAME
          }}
    - continue-on-error: true
      name: Build gateway-service all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=gateway-service
        cache-to: type=gha,mode=max,scope=gateway-service
        context: ./services/gateway-service
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/gateway-service:${{ env.TAG_LATEST }},crapi/gateway-service:${{
          env.TAG_NAME }}
    - continue-on-error: true
      name: Build mailhog all platforms and push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        cache-from: type=gha,scope=mailhog-service
        cache-to: type=gha,mode=max,scope=mailhog-service
        context: ./services/mailhog
        platforms: ${{ env.PLATFORMS }}
        push: false
        tags: crapi/mailhog:${{ env.TAG_LATEST }},crapi/mailhog:${{ env.TAG_NAME }}
  build-context:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      name: Dump GitHub context
      run: echo "$GITHUB_CONTEXT"
name: Publish Images
on:
  repository_dispatch:
    types: trigger-ga___publish.yml
